[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/leon/projects/epsilon-ensemble/src/main/scala/Main.scala, /home/leon/projects/epsilon-ensemble/src/main/scala/demo/LinearRegressionOnSine.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(epsilon.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(epsilon.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/leon/projects/epsilon-ensemble/src/main/scala/Main.scala, /home/leon/projects/epsilon-ensemble/src/main/scala/demo/LinearRegressionOnSine.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: epsilon.Main[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to /home/leon/projects/epsilon-ensemble/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 17a40 for Scala compiler version 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/leon/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.3/scala-library-2.13.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/leon/projects/epsilon-ensemble/target/scala-2.13/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.588922034 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from epsilon.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: epsilon.Main[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(epsilon.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(epsilon.Main,ModifiedNames(changes = UsedName(finalize,[Default]))) invalidates 1 classes due to The epsilon.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(epsilon.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from epsilon.Demo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: epsilon.Demo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(epsilon.Demo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of epsilon.Main: Set(UsedName(Demo,[Default]), UsedName(run,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(epsilon.Demo,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(ensemble,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(Demo,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(run,[Default]), UsedName(notifyAll,[Default]), UsedName(models,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(generator,[Default]))) invalidates 2 classes due to The epsilon.Demo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(ensemble,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(Demo,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(run,[Default]), UsedName(notifyAll,[Default]), UsedName(models,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(generator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(epsilon.Demo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(epsilon.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
